#include<bits/stdc++.h>
using namespace std;
void printsubstr(string s,int low,int high)
{
    for(int i=low;i<=high;i++)
        cout<<s[i];
        cout<<"\n";
}
int longestsubstr(string s)
{
    int n=s.length();
    int maxl=1,start=0;

    for(int i=0;i<s.length();i++)
    {
        for(int j=i;j<s.length();j++)
        {
            bool flag=1;
            for(int k=0;k<(j-i+1)/2;k++)
            {
                if(s[i+k]!=s[j-k])
                    flag=0;
            }
            if(flag && j-i+1>maxl)
            {
                start=i;
                maxl=j-i+1;
            }
        }
    }
    printsubstr(s,start,start+maxl-1);
    return maxl;
}

int main()
{
    string s;
    cin>>s;
    int ans=longestsubstr(s);
    cout<<"length is:"<<ans;
    return 0;
}

#include<bits/stdc++.h>
#define int long long
using namespace std;
int32_t main()
{
    int r,c,t;
    cin>>r>>c>>t;
    int a[r][c];
    bool check=false;
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        {
          cin>>a[i][j];
        }
    }
    if(a[0][c-1]>=t)
    {
        for(int k=0;k<c;k++)
        {
            if(a[0][k]==t)
               check=true;
        }
    }
    else{
    for(int i=1;i<r;i++)
    {
        if(a[i-1][c-1]<t && a[i][c-1]>=t)
        {
            for(int k=0;k<c;k++)
            {
                if(a[i][k]==0)
                   check=true;
            }
        }
    }
    }
    if(check)
        cout<<"True\n";
    else
        cout<<"False\n";
    return 0;
}
#include<bits/stdc++.h>
#define int long long
using namespace std;
int32_t main()
{
    int r,c;
    cin>>r>>c;
    int a[r][c];
   vector<int>vec;
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        {
          cin>>a[i][j];
        }
    }
     for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        {
          vec.push_back(a[i][j]);
        }
    }
    sort(vec.begin(),vec.end());
    int k=vec.size();
    if(k%2==0)
        cout<<vec[(k/2)-1];
    else
        cout<<vec[((k+1)/2)-1];
    return 0;
}

